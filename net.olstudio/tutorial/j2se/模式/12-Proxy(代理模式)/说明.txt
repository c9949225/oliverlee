代理模式属于结构型模式。意图是为其他对象提供一种代理以控制对这个对象的访问。控制对象的访问主要体现在是只有在我们确实需要这个对象时才对他进行创建和初始化。比如在文档中嵌入的图形对象的文档编辑器。有些对象的创建开销很大，但是打开文档必须很迅速，因此我们在打开文档时应该避免一次性创建所有开销很大的对象。因为并非所有这些对象在文档中都同时可见，所以也没有必要同时创建这些对象。对于每一个开销很大的对象，应该根据需要进行创建，当一个图像变为可见时会产生这样的需要，但是在文档中我们使用什么来代替这个图像哪，我们又如何才能隐藏根据需要创建图像这一事实，从而不会使得编辑器的实现复杂化哪?这里使用Proxy模式很好的解决了这个问题。

例如：一个显示图片的选项卡程序，每一个选项卡显示一幅图片，在任何一个时刻，只有一个选项卡被选中，因此在没有选中的选项卡中的图片就没有必要被创建，使用一个图片的代理对象代理这个图片，只要在客户端程序要求显示这个图像时才真正创建该图像，在代理对象中必须存储被代理对象的所有的信息。

适用性：在需要用比较通用和复杂的对象指针代替简单的指针的时候，使用Proxy模式，
1.      远程代理，为一个对象在不同的地址空间提供局部代表
2.      虚代理 根据需要创建开销很大的对象。
3.      保护代理 控制队员是对象的访问。保护代理用于对象应该有不同的访问权限的时候。
4.      智能指引取代了简单的指针，他在访问对象时执行一些附加操作。主要的用途包括：对指向实际对象的引用计数，这样当该对象没有引用时，可以自动释放。当第一次引用一个持久对象时，将它装入内存。在访问一个实际对象前，检查是否已经锁定了它，以确保其他对象不能改变它。

