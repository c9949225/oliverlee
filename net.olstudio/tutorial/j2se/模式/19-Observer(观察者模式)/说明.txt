 观察者模式属于行为型模式，
 其意图是定义对象间的一种一对多的依赖关系，当一个对象的状态发生改变时，
 所有依赖于它的对象都得到通知并被自动更新。
 
 在制作系统的过程中，将一个系统分割成一系列相互协作的类有一个常见的副作用：需要维护相关对象间的一致性。我们不希望为了维持一致性而使各类紧密耦合，因为这样降低了他们的可充用性。这一个模式的关键对象是目标（Subject）和观察者（Observer）。一个目标可以有任意数目的依赖它的观察者，一旦目标的状态发生改变，所有的观察者都得到通知，作为对这个通知的响应，每个观察者都将查询目标以使其状态与目标的状态同步。这种交互也称为发布-订阅模式，目标是通知的发布者。
 他发出通知时并不需要知道谁是他的观察者，可以有任意数据的观察者订阅并接收通知。
 
 适用性：在以下的任一情况下可以使用观察者模式：
l         当一个抽象模型有两个方面，其中一个方面依赖于另一方面。将这二者封装在独立的对象中可以使他们各自独立地改变和复用。
l         当对一个对象的改变需要同时改变其它对象，而不知道具体由多少对象有待改变。
l         当一个对象必须通知其他对象，而它又不能假定其他对象是谁，换言之，你不希望这些对象是紧密耦合的。

例如：老师又电话号码，学生需要知道老师的电话号码以便于在合时的时候拨打，在这样的组合中，
老师就是一个被观察者（Subject），学生就是需要知道信息的观察者，当老师的电话号码发生改变时，
学生得到通知，并更新相应的电话记录。

总结：Observer模式的最知名的应用是在MVC结构，Observer模式可以很好的应用在文档和图表程序的制作中。

